{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","keyValue","SetKeyValue","handleKeyUp","e","key","useEffect","document","addEventListener","removeEventListener","className","ReactDOM","render","getElementById"],"mappings":"wMAEaA,EAAgB,WAC3B,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,SAACC,GACnBF,EAAYE,EAAEC,MAWhB,OARAC,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASL,GAE5B,WACLI,SAASE,oBAAoB,QAASN,MAEvC,IAGD,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAQ,mCACuBA,EADvB,KAEL,+B,MCjBZU,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.418ee812.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [keyValue, SetKeyValue] = useState('');\n\n  const handleKeyUp = (e: KeyboardEvent) => {\n    SetKeyValue(e.key);\n  };\n\n  useEffect(() => {\n    document.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <p className=\"App__message\">\n        {keyValue\n          ? `The last pressed key is [${keyValue}]`\n          : 'Nothing was pressed yet'}\n      </p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}